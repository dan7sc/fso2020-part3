{"version":3,"sources":["services/person.js","components/Filter.jsx","components/PersonForm.jsx","components/PersonDetails.jsx","components/Persons.jsx","components/SuccessNotification.jsx","components/ErrorNotification.jsx","App.jsx","index.jsx"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","request","delete","Filter","props","handleFilterChange","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","type","PersonDetails","person","handlePersonDelete","name","number","onClick","Persons","persons","map","key","SuccessNotification","message","className","ErrorNotification","App","useState","setPersons","setNewName","setNewNumber","personsToShow","setPersonsToShow","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","catch","showNotification","updatePerson","newContact","filter","returnedPerson","updatedList","callback","setTimeout","classesName","event","target","personsToFilter","toLowerCase","includes","preventDefault","alertMessage","confirmMessage","alert","window","confirm","concat","e","error","createPerson","personToDelete","newPersonsList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73697962.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(request => request.data)\n}\n\nconst deleteById = id => {\n    axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, deleteById }\n","import React from 'react'\n\nconst Filter = (props) => {\n    const {handleFilterChange} = props\n\n    return (\n        <div>\n          filter shown with\n          <input\n            onChange={handleFilterChange}\n          />\n        </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = (props) => {\n    const {addPerson, newName, handleNameChange, newNumber, handleNumberChange} = props\n\n    return (\n        <form onSubmit={addPerson}>\n          <div>\n            name: <input\n            value={newName}\n            onChange={handleNameChange}\n  />\n          </div>\n          <div>\n            number: <input\n                        value={newNumber}\n                        onChange={handleNumberChange}\n                     />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n    )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst PersonDetails = (props) => {\n    const {person, handlePersonDelete} = props\n\n    return (\n        <div>\n          <span>{person.name} {person.number} </span>\n          <button onClick={() => handlePersonDelete(person.id)}>delete</button>\n        </div>\n    )\n}\n\nexport default PersonDetails\n","import React from 'react'\nimport PersonDetails from './PersonDetails'\n\nconst Persons = (props) => {\n    const {persons, handlePersonDelete} = props\n\n    return (\n        <div>\n          {persons.map(person => <PersonDetails\n                                   key={person.name}\n                                   person={person}\n                                   handlePersonDelete={handlePersonDelete}\n                                 />)}\n        </div>\n    )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst SuccessNotification = (props) => {\n    const {message} = props\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className='success'>\n          {message}\n        </div>\n    )\n}\n\nexport default SuccessNotification\n","import React from 'react'\n\nconst ErrorNotification = (props) => {\n    const {message} = props\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className='error'>\n          {message}\n        </div>\n    )\n}\n\nexport default ErrorNotification\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/person'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport SuccessNotification from './components/SuccessNotification'\nimport ErrorNotification from './components/ErrorNotification'\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ personsToShow, setPersonsToShow ] = useState(persons)\n    const [ successMessage, setSuccessMessage ] = useState(null)\n    const [ errorMessage, setErrorMessage ] = useState(null)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n                setPersonsToShow(initialPersons)\n            })\n            .catch(() => {\n                showNotification(`Error in getting data`, setErrorMessage)\n            })\n    }, [])\n\n    const existPersonName = (name) => persons.map(person => person.name === name).includes(true)\n\n    const existPersonNumber = (number) => persons.map(person => person.number === number).includes(true)\n\n    const getPersonId = (name) => persons.filter(person => person.name === name)[0].id\n\n    const updatePerson = (newContact) => {\n        const id = getPersonId(newContact.name)\n        personService\n            .update(id, newContact)\n            .then(returnedPerson => {\n                const updatedList = persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson)\n                setPersons(updatedList)\n                setPersonsToShow(updatedList)\n                showNotification(`Changed number to ${returnedPerson.number}`, setSuccessMessage)\n            })\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const createPerson = (newContact) => {\n        personService\n            .create(newContact)\n            .then(returnedPerson => {\n                setPersons(persons.concat(returnedPerson))\n                setPersonsToShow(persons.concat(returnedPerson))\n                showNotification(`Added ${returnedPerson.name}`, setSuccessMessage)\n            })\n            .catch(e => {\n                const error = e.response.data.error\n                showNotification(error, setErrorMessage)\n            })\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const showNotification = (message, callback) => {\n        callback(message)\n        setTimeout(() => {\n            callback(null)\n        }, 3000)\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const newContact = {\n            name: newName,\n            number: newNumber\n        }\n        if (existPersonName(newContact.name)) {\n            const alertMessage = `${newContact.name} is already added to phonebook`\n            const confirmMessage = `${newContact.name} is already added to phonebook, replace the old number with a new one?`\n            if (existPersonNumber(newContact.number)) {\n                return alert(alertMessage)\n            }\n            if (window.confirm(confirmMessage)) return updatePerson(newContact)\n        }\n        createPerson(newContact)\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        const filter = event.target.value\n        const personsToFilter = persons.filter(person => person.name.toLowerCase().includes(filter))\n        setPersonsToShow(personsToFilter)\n    }\n\n    const handlePersonDelete = (id) => {\n        const personToDelete = persons.filter(person => person.id === id)[0]\n        if (window.confirm(`Delete ${personToDelete.name}?`)) {\n            personService\n                .deleteById(id)\n            const newPersonsList = persons.filter(person => person.id !== id)\n            setPersons(newPersonsList)\n            setPersonsToShow(newPersonsList)\n        }\n    }\n\n    return (\n        <div>\n          <h2>Phonebook</h2>\n          <SuccessNotification classesName='success' message={successMessage} />\n          <ErrorNotification classesName='error' message={errorMessage} />\n          <Filter handleFilterChange={handleFilterChange} />\n          <h3>add a new</h3>\n          <PersonForm\n            newName={newName}\n            newNumber={newNumber}\n            addPerson={addPerson}\n            handleNameChange={handleNameChange}\n            handleNumberChange={handleNumberChange}\n          />\n          <h3>Numbers</h3>\n          <Persons\n            persons={personsToShow}\n            handlePersonDelete={handlePersonDelete}\n          />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}